\open ::Logic

\static \function
Reflexive {X : \Type0} (R : X -> X -> \Type0) <=
  \Pi (x : X) -> R x x

\static \function
Symmetric {X : \Type0} (R : X -> X -> \Type0) <=
  \Pi (x y : X) -> R x y -> R y x

\static \function
Transitive {X : \Type0} (R : X -> X -> \Type0) <=
  \Pi (x y z : X) -> R x y -> R y z -> R x z

\open ::Data::Empty

\static \function
Dec (P : \Type0) <= (~~) P || P

\static \data
Di (A B : \Type0)
  | Di A B => diyes (a : A) (nb : (~~) B)
  | Di A B => dino (na : (~~) A) (b : B)

\static \data
Tri (A B C : \Type0)
  | Tri A B C => tri_lt (a : A) (nb : (~~) B) (nc : (~~) C)
  | Tri A B C => tri_eq (na : (~~) A) (b : B) (nc : (~~) C)
  | Tri A B C => tri_gt (na : (~~) A) (nb : (~~) B) (c : C)

\static \class
DecPred {
  \abstract P   {X : \Type0} : X -> \Type0
  \abstract dec {X : \Type0} (x : X) : Dec (P x)
}

\static \class
DecRel {
  \abstract R   {X Y : \Type0} : X -> Y -> \Type0
  \abstract dec {X Y : \Type0} (x : X) (y : Y) : Dec (R x y)
}
