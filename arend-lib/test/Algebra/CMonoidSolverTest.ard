\import Algebra.Meta
\import Algebra.Monoid
\import Algebra.Monoid.Solver
\import Algebra.Pointed

\lemma test1 {M : CMonoid} (x y z w : M)
  : (x * (1 * y)) * ((1 * z) * w) = x * ((y * (z * 1)) * w)
  => equation

\lemma test2 {M : CMonoid} (x y z w : M)
  : (y * (1 * z)) * ((1 * x) * w) = x * ((y * (z * 1)) * w)
  => equation
