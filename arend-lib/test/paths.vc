\function
idp {A : \Type0} {a : A} => path (\lam _ => a)

\function
pmap {A B : \Type0} (f : A -> B) {a a' : A} (p : a = a')
    => path (\lam i => f (p @ i))

\function
transport {A : \Type0} (B : A -> \Type0) {a a' : A} (p : a = a') (b : B a)
    => coe (\lam i => B (p @ i)) b right

\function
inv {A : \Type0} {a a' : A} (p : a = a')
    => transport (\lam a'' => a'' = a) p idp

\function
concat {A : I -> \Type0} {a : A left} {a' a'' : A right} (p : Path A a a') (q : a' = a'')
    => transport (Path A a) q p

\function
(>==) {A : \Type0} {a a' a'' : A} (p : a = a') (q : a' = a'')
    => concat p q

\function
(<*) {A : \Type0} {a a' a'' : A} (p : a = a') (q : a' = a'')
    => transport (\lam x => x = a'') (inv p) q

\function
squeeze1 (i j : I)
    => coe (\lam x => left = x) (path (\lam _ => left)) j @ i

\function
squeeze (i j : I)
    => coe (\lam i => Path (\lam j => left = squeeze1 i j) (path (\lam _ => left)) (path (\lam j => squeeze1 i j))) (path (\lam _ => path (\lam _ => left))) right @ i @ j

\function squeeze-test-xy (x y : I) => squeeze x y

\function
psqueeze {A : \Type0} {a a' : A} (p : a = a') (i : I) : a = p @ i
    => path (\lam j => p @ squeeze i j)

\function
Jl {A : \Type0} {a : A} (B : \Pi (a' : A) -> a = a' -> \Type0) (b : B a idp) {a' : A} (p : a = a') : B a' p
    => coe (\lam i => B (p @ i) (psqueeze p i)) b right

\function
inv-inv {A : \Type0} {a a' : A} (p : a = a') : inv (inv p) = p
    => Jl (\lam _ p => inv (inv p) = p) idp p

\function
inv-concat {A : \Type0} {a a' : A} (p : a = a') : inv p >== p = idp
    => Jl (\lam _ q => inv q >== q = idp) idp p

\function
concat-inv {A : \Type0} {a a' : A} (p : a = a') : p >== inv p = idp
    => Jl (\lam _ q => q >== inv q = idp) idp p

\function
concat-idp {A : \Type0} {a a' : A} (p : a = a') : idp >== p = p
    => Jl (\lam _ p => idp >== p = p) idp p

\function
concat-assoc {A : \Type0} {a1 a2 a3 a4 : A} (p : a1 = a2) (q : a2 = a3) (r : a3 = a4) : (p >== q) >== r = p >== (q >== r)
    => Jl (\lam _ r => (p >== q) >== r = p >== (q >== r)) idp r

\data QED | qed

\function
(!) {A : \Type0} (a : A) (_ : QED) : a = a => idp

\function
(==<) {A : \Type0} (a : A) {a' : A} (p : a = a') => p
