\function
idp {A : \Type0} {a : A} => path (\lam _ => a)

\function
pmap {A B : \Type0} (f : A -> B) {a a' : A} (p : a = a')
    => path (\lam i => f (p @ i))

\function
transport {A : \Type0} (B : A -> \Type0) {a a' : A} (p : a = a') (b : B a)
    <= coe (\lam i => B (p @ i)) b right

\function
inv {A : \Type0} {a a' : A} (p : a = a')
    <= transport (\lam a'' => a'' = a) p idp

\function
concat {A : I -> \Type0} {a : A left} {a' a'' : A right} (p : Path A a a') (q : a' = a'')
    <= transport (Path A a) q p

\function \infixr 9
(*) {A : \Type0} {a a' a'' : A} (p : a = a') (q : a' = a'')
    <= concat p q

\function \infixr 9
(<*) {A : \Type0} {a a' a'' : A} (p : a = a') (q : a' = a'')
    <= transport (\lam x => x = a'') (inv p) q

\function
squeeze1 (i j : I)
    <= coe (\lam x => left = x) (path (\lam _ => left)) j @ i

\function
squeeze (i j : I)
    <= coe (\lam i => Path (\lam j => left = squeeze1 i j) (path (\lam _ => left)) (path (\lam j => squeeze1 i j))) (path (\lam _ => path (\lam _ => left))) right @ i @ j

\function
psqueeze {A : \Type0} {a a' : A} (p : a = a') (i : I) : a = p @ i
    => path (\lam j => p @ squeeze i j)

\function
Jl {A : \Type0} {a : A} (B : \Pi (a' : A) -> a = a' -> \Type0) (b : B a idp) {a' : A} (p : a = a') : B a' p
    <= coe (\lam i => B (p @ i) (psqueeze p i)) b right

\function
inv-inv {A : \Type0} {a a' : A} (p : a = a') : inv (inv p) = p
    <= Jl (\lam _ p => inv (inv p) = p) idp p

\function
inv-concat {A : \Type0} {a a' : A} (p : a = a') : inv p * p = idp
    <= Jl (\lam _ q => inv q * q = idp) idp p

\function
concat-inv {A : \Type0} {a a' : A} (p : a = a') : p * inv p = idp
    <= Jl (\lam _ q => q * inv q = idp) idp p

\function
concat-idp {A : \Type0} {a a' : A} (p : a = a') : idp * p = p
    <= Jl (\lam _ p => idp * p = p) idp p

\function
concat-assoc {A : \Type0} {a1 a2 a3 a4 : A} (p : a1 = a2) (q : a2 = a3) (r : a3 = a4) : (p * q) * r = p * (q * r)
    <= Jl (\lam _ r => (p * q) * r = p * (q * r)) idp r

\data QED | qed

\function \infix 2
(!) {A : \Type0} (a : A) (_ : QED) : a = a => idp

\function \infixr 1
(>==) {A : \Type0} {a a' a'' : A} (p : a = a') (q : a' = a'') <= concat p q

\function \infix 2
(==<) {A : \Type0} (a : A) {a' : A} (p : a = a') => p

\function
idp-over (A : I -> \Type0) (a : A left) => path (coe A a)

\function
path-over {A : I -> \Type0} {a : A left} {a' : A right} (p : coe A a right = a') <= concat (idp-over A a) p

\function
coe-Path {A : \Type0} {a1 a2 a3 a4 : A} (p : a2 = a1) (q : a2 = a3) (r : a3 = a4)
    : coe (\lam i => p @ i = r @ i) q right = inv p * q * r
    <= coe (\lam j => coe (\lam i => p @ i = r @ i) q j = inv (psqueeze p j) * q * psqueeze r j)
           (inv (concat-idp q)) right

\function
rotate {A : \Type0} {a a' a'' : A} (p : a' = a) {q : a' = a''} (r : a = a'') (t : q = p * r) : inv p * q = r =>
    inv p * q           ==< pmap (\lam s => inv p * s) t >==
    inv p * (p * r)     ==< inv (concat-assoc (inv p) p r) >==
    (inv p * p) * r     ==< pmap (\lam s => s * r) (inv-concat p) >==
    idp * r             ==< concat-idp r >==
    r                   !qed

\function
homotopy-isNatural {A B : \Type0} (f g : A -> B) (h : \Pi (a : A) -> f a = g a) {a a' : A} (p : a = a') : pmap f p * h a' = h a * pmap g p
    <= Jl (\lam x q => pmap f q * h x = h a * pmap g q) (concat-idp (h a)) p

\function
homotopy-comm-lemma {A : \Type0} (f : A -> A) (h : \Pi (a : A) -> f a = a) (a : A) : h (f a) = pmap f (h a) =>
    h (f a)                             ==< pmap (\lam s => h (f a) * s) (inv (concat-inv (h a))) >==
    h (f a) * (h a * inv (h a))         ==< inv (concat-assoc (h (f a)) (h a) (inv (h a))) >==
    (h (f a) * h a) * inv (h a)         ==< pmap (\lam s => s * inv (h a)) (inv (homotopy-isNatural f (\lam a => a) h (h a))) >==
    (pmap f (h a) * h a) * inv (h a)    ==< concat-assoc (pmap f (h a)) (h a) (inv (h a)) >==
    pmap f (h a) * (h a * inv (h a))    ==< pmap (\lam s => pmap f (h a) * s) (concat-inv (h a)) >==
    pmap f (h a)                        !qed
