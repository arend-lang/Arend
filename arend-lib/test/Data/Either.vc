\open ::Data::Bool
\open ::Data::Unit
\open ::Data::Empty

\data Either {lp : Lvl} {lh : CNat} (A B : \Type (lp, lh))
    | inl A
    | inr B

\function
is-left {lp : Lvl} {lh : CNat} {L R : \Type (lp, lh)} (e : Either L R) : \Prop <= \elim e
    | inl _ => Unit
    | inr _ => Empty

\function
is-right {lp : Lvl} {lh : CNat} {L R : \Type (lp, lh)} (e : Either L R) : \Prop <= \elim e
    | inl _ => Empty
    | inr _ => Unit

\function
map-inl {lp : Lvl} {lh : CNat} {L L' R : \Type (lp, lh)} (f : L -> L') (e : Either L R) : Either L' R <= \elim e
    | inl l => inl (f l)
    | inr r => inr r

\function
map-inr {lp : Lvl} {lh : CNat} {L R R' : \Type (lp, lh)} (f : R -> R') (e : Either L R) : Either L R' <= \elim e
    | inl l => inl l
    | inr r => inr (f r)

\function
inl' : Either Unit Unit <= inl unit

\function
inr' : Either Unit Unit <= inr unit

\function
if' {lp : Lvl} {lh : CNat} {A L R : \Type (lp ,lh)} (e : Either L R) (then else : A) : A <= \elim e
    | inr _ => then
    | inl _ => else
