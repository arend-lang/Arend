\open Data.Empty

\static \data Vector (n : Nat) (A : \Type0)
    | Vector  zero   A => vnil
    | Vector (suc n) A => \infixr 5 (:^) A (Vector n A)

\static \function
singleton {A : \Type0} (a : A) : Vector 1 A => a :^ vnil

\open Data.Unit

\static \function
head {n : Nat} {A : \Type0} (xs : Vector (suc n) A) : A <= \elim xs
    | (:^) x _ => x

\static \function
tail {n : Nat} {A : \Type0} (xs : Vector (suc n) A) : Vector n A <= \elim xs
    | (:^) _ xs => xs

\open Data.Nat.Base

\static \function \infixr 5
(+^) {n m : Nat} {A : \Type0} (xs : Vector n A) (ys : Vector m A) : Vector (n + m) A <= \elim n, xs
    | zero, vnil => ys
    | suc n', (:^) x xs' => x :^ xs' +^ ys

\open Data.Fin

\static \function
lookup {n : Nat} {A : \Type0} (xs : Vector n A) (i : Fin n) : A <= \elim n, xs, i
    | suc n', (:^) x xs', fzero => x
    | suc n', (:^) x xs', fsuc i' => lookup xs' i'

\static \function
update {n : Nat} {A : \Type0} (xs : Vector n A) (i : Fin n) (x : A) : Vector n A <= \elim n, xs, i
    | suc n', (:^) x' xs', fzero => x :^ xs'
    | suc n', (:^) x' xs', fsuc i' => x' :^ update xs' i' x
