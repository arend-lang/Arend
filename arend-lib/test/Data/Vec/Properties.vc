\open Data.Vector

\open Data.List.Properties
\open Data.Nat.Properties
\open Paths

\static \function
vappend-vnil-right {n : Nat} {A : \Type0} (xs : Vector n A) 
                  : Path (\lam i => Vector (plus-comm0 n @ i) A) xs (xs +^ vnil) <= \elim n, xs
    | zero, vnil => idp
    | suc n', (:^) x xs' => path (\lam i => x :^ ((vappend-vnil-right xs') @ i))

\static \function
vappend-assoc {n m k : Nat} {A : \Type0} (xs : Vector n A) (ys : Vector m A) (zs : Vector k A)
              : Path (\lam i => Vector (plus-assoc n m k @ i) A) ((xs +^ ys) +^ zs) (xs +^ (ys +^ zs)) <= \elim n, xs
    | zero, vnil => idp
    | suc n', (:^) x xs' => path (\lam i => x :^ (vappend-assoc xs' ys zs @ i))

\static \function
vcons-injective {n : Nat} {A : \Type0} {x y : A} {xs ys : Vector n A} (p : (x :^ xs) = (y :^ ys)) : \Sigma (x = y) (xs = ys)
    => (pmap head p, pmap tail p)

\open Data.Fin

\static \function
vappend-lookup-left {n m : Nat} {A : \Type0} (xs : Vector n A) (ys : Vector m A) (i : Fin n)
                    : lookup xs i = lookup (xs +^ ys) (flift m i) <= \elim n, xs, i
    | suc n', (:^) x xs', fzero => idp
    | suc n', (:^) x xs', fsuc i' => vappend-lookup-left xs' ys i'

\static \function
vappend-lookup-right {n m : Nat} {A : \Type0} (xs : Vector n A) (ys : Vector m A) (i : Fin m)
                     : lookup ys i = lookup (xs +^ ys) (fadd n i) <= \elim n, xs
    | zero, vnil => idp
    | suc n', (:^) x xs' => vappend-lookup-right xs' ys i