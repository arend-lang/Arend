\open Arith
\open Data.Bool
\open Data.Maybe
\open Data.Empty
\open Combinators

\static \data
Fin (n : Nat)
| Fin (suc zero) => fzero
| Fin (suc n) => fsuc (Fin n)

\static \function
to-nat {n : Nat} (x : Fin n) : Nat <= \elim n
    | suc n' <= \elim x
      | fzero => zero
      | fsuc x' => suc $ to-nat x' ;
    | zero <= \elim x

\static \function
from-nat (n : Nat) : Fin (suc n) <= \elim n
    | suc n' => fsuc $ from-nat n'
    | zero => fzero
