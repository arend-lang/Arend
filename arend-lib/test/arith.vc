\function
(+) (x y : Nat) : Nat <= \elim x
    | zero => y
    | suc x' => suc (x' + y)

\function
(*) (x y : Nat) : Nat <= \elim x
    | zero => zero
    | suc x' => y + (x' * y)

\function
idp {A : \Type0} {a : A} => path (\lam _ => a)

\function
pmap {A B : \Type0} (f : A -> B) {a a' : A} (p : Path (\lam _ => A) a a')
    => path (\lam i => f (p @ i))

\function
transport {A : \Type0} (B : A -> \Type0) {a a' : A} (p : Path (\lam _ => A) a a') (b : B a)
    => coe (\lam i => B (p @ i)) b right

\function
inv {A : \Type0} {a a' : A} (p : Path (\lam _ => A) a a')
    => transport (\lam a'' => Path (\lam _ => A) a'' a) p idp

\function
(>==) {A : \Type0} {a a' a'' : A} (p : Path (\lam _ => A) a a') (q : Path (\lam _ => A) a' a'')
    => transport (\lam a''' => Path (\lam _ => A) a a''') q p

\function
plus-assoc (x y z : Nat) : Path (\lam _ => Nat) ((x + y) + z) (x + (y + z)) <= \elim x
    | zero => path (\lam _ => y + z)
    | suc x' => path (\lam i => suc (plus-assoc x' y z @ i))

\function
plus-comm0 (y : Nat) : Path (\lam _ => Nat) y (y + zero) <= \elim y
    | zero => idp
    | suc y' => pmap suc (plus-comm0 y')

\function
plus-comm (x y : Nat) : Path (\lam _ => Nat) (x + y) (y + x) <= \elim x
    | zero => plus-comm0 y
    | suc x' <= \elim y
        | zero => inv (plus-comm0 (suc x'))
        | suc y' => pmap suc (plus-comm x' (suc y') >== pmap suc (inv (plus-comm x' y')) >== plus-comm (suc x') y')

\function
mul-distr (x y z : Nat) : Path (\lam _ => Nat) ((x + y) * z) ((x * z) + (y * z)) <= \elim x
    | zero => idp
    | suc x' => pmap (\lam t => z + t) (mul-distr x' y z) >== inv (plus-assoc z (x' * z) (y * z))

\function
mul-assoc (x y z : Nat) : Path (\lam _ => Nat) ((x * y) * z) (x * (y * z)) => \elim x
    | zero => idp
    | suc x' => mul-distr y (x' * y) z >== pmap (\lam t => (y * z) + t) (mul-assoc x' y z)

\function
mul-comm0 (y : Nat) : Path (\lam _ => Nat) zero (y * zero) <= \elim y
    | zero => idp
    | suc y' => mul-comm0 y'

\function
mul-comm (x y : Nat) : Path (\lam _ => Nat) (x * y) (y * x) <= \elim x
    | zero => mul-comm0 y
    | suc x' <= \elim y
        | zero => inv (mul-comm0 x')
        | suc y' => pmap suc (pmap (\lam t => y' + t) (mul-comm x' (suc y')) >== inv (plus-assoc y' x' (y' * x')) >== pmap (\lam t => t + (y' * x')) (plus-comm y' x') >== pmap (\lam t => (x' + y') + t) (inv (mul-comm x' y')) >== plus-assoc x' y' (x' * y') >== pmap (\lam t => x' + t) (mul-comm (suc x') y'))
