\open ::Combinators
\open ::Data::Bool
\open ::Data::Either
\open ::Data::Empty
\open ::Data::Fin
\open ::Data::Nat::Base
\open ::Data::Nat::Compare
\open ::Data::Unit
\open ::Logic
\open ::Paths


\open ::LC::Test::Term


\function
subst'
    (t : Term)
    (y : Nat)
    (s : Term)
    (rho : Nat -> Nat) : Term <= \elim t
        | Var x     =>  \case (rho x =? y)
                            | inr _ => s
                            | inl _ => Var (rho x);
        | App t1 t2 => App (subst' t1 y s rho) (subst' t2 y s rho)
        | Lam x t   => \case (rho x =? y)
                            | inr _ => Lam x t
                            | inl _ =>  \case (isFreeDec x s)
                                            | inr _ => Lam (suc x) (subst' t y s (\lam z => \case (z =? x) | inr _ => suc x | inl _ => rho z))
                                            | inl _ => Lam x (subst' t y s rho)


\function
subst
    (t : Term)
    (y : Nat)
    (s : Term) : Term => subst' t y s id
