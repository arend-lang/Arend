\import LC.Test.Properties
\import LC.Test.Subst
\import LC.Test.Term


\import Paths

\data AlphaEq (t1 t2 : Term) \elim t1, t2
    | Var x, Var y           => VarEq (x = y)
    | App t1 s1, App t2 s2   => AppEq (p : AlphaEq t1 t2) (q : AlphaEq s1 s2)
    | Lam x t1, Lam y t2     => LamEq (p : AlphaEq (subst t1 x (Var y)) t2)


\func
alpha-eq-refl
    {t : Term} : t `AlphaEq` t \elim t
        | Var x     => VarEq idp
        | App t1 t2 => AppEq alpha-eq-refl  alpha-eq-refl
        | Lam x t   => LamEq (subst-right-unit t x)
