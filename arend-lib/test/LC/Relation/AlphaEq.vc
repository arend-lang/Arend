\open ::LC::Relation::Fresh
\open ::LC::Subst::NamedSubstProperties
\open ::LC::Subst::Subst
\open ::LC::Term::Term


\open ::Data::List \hiding (concat)
\open ::Data::Nat::Base
\open ::Data::Nat::Compare
\open ::Logic
\open ::Paths


\data AlphaEq (t1 t2 : NTerm)   
    | AlphaEq (NVar x) (NVar y)           => VarEq (x = y) 
    | AlphaEq (NApp t1 s1) (NApp t2 s2)   => AppEq (AlphaEq t1 t2) (AlphaEq s1 s2)
    | AlphaEq (NLam x t1) (NLam y t2)     => LamEq (b : Nat) (b # t1) (b # t2) (AlphaEq (nsubst-var t1 x b) (nsubst-var t2 y b))


\function
alpha-eq-refl
    {t : NTerm} : t `AlphaEq` t <= \elim t
        | NVar x     => VarEq idp 
        | NApp t1 t2 => AppEq (alpha-eq-refl) (alpha-eq-refl)
        | NLam x t   => LamEq (gen-fresh-var (singleton t)) {?} {?} (nsubst-var-respects-alpha-eq t t x (gen-fresh-var (singleton t)) alpha-eq-refl)

{-
\function
alpha-eq-sym
    {t1 t2 : NTerm}
    (p : t1 `AlphaEq` t2) : t2 `AlphaEq` t1 <= \elim t1, t2, p
        | NVar x1, NVar x2, VarEq p             => VarEq (inv p)
        | NApp t1 s1, NApp t2 s2, AppEq p1 p2   => AppEq (alpha-eq-sym p1) (alpha-eq-sym p2)
        | NLam x1 t1, NLam x2 t2, LamEq p       =>  \let
                                                        | resp => nsubst-respects-alpha-eq t2 (nsubst t1 x1 (NVar x2)) x2 (NVar x1) (alpha-eq-sym p)
                                                    \in LamEq {?} 

\function
alpha-eq-trans
     {t1 t2 t3 : NTerm}
     (p1 : t1 `AlphaEq` t2)
     (p2 : t2 `AlphaEq` t3) : t1 `AlphaEq` t3 <= \elim t1, t2, t3, p1, p2
        | NVar x1, NVar x2, NVar x3, VarEq p1, VarEq p2                 => VarEq (p1 *> p2)
        | NApp t1 s1, NApp t2 s2, NApp t3 s3, AppEq p1 q1, AppEq p2 q2  => AppEq (alpha-eq-trans p1 p2) (alpha-eq-trans q1 q2)
        | NLam x1 t1, NLam x2 t2, NLam x3 t3, LamEq p1, LamEq p2        =>  \let
                                                                                | resp => nsubst-respects-alpha-eq (nsubst t1 x1 (NVar x2)) t2 x2 (NVar x3) p1
                                                                                | tran => alpha-eq-trans resp p2
                                                                            \in LamEq {?} 
-}
