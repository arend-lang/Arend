\open ::LC::Term::Term1
\open ::LC::Util::Ctx
\open ::LC::Util::RVec

\open ::Data::Empty
\open ::Data::Nat::Base
\open ::Data::Fin
\open ::Paths


-- Quotient term properties

\function
gamma
    {n : Nat}
    (env : Ctx n)
    (t : QTerm)
    (p : TermInCtx' env t) : ITerm n <= \elim t, p
        | QVar i, QVarInCtx i p         => IVar i
        | QApp t1 t2, QAppInCtx p1 p2   => IApp (gamma env t1 p1) (gamma env t2 p2)
        | QLam x t, QLamInCtx p         => ILam (gamma (extend env x) t p)


\function
delta'
    {n : Nat}
    (env : Ctx n)
    (t : ITerm n) : \Sigma (t' : QTerm) (p : TermInCtx' env t') <= \elim t
        | IVar i        => (QVar (env !! i), QVarInCtx i idp)
        | IApp t1 t2    => (QApp (delta' env t1).1 (delta' env t2).1, QAppInCtx (delta' env t1).2 (delta' env t2).2)
        | ILam t        => (QLam n (delta' (extend env n) t).1, QLamInCtx (delta' (extend env n) t).2)


\function
delta
    {n : Nat}
    (t : ITerm n) : \Sigma (env : Ctx n) (t' : QTerm) (p : TermInCtx' env t') => ((gen_env n), (delta' (gen_env n) t).1, (delta' (gen_env n) t).2)


\function
gamma-respects-alpha-eq
    {n : Nat}
    (env1 : Ctx n)
    (t1 : QTerm)
    (p1 : TermInCtx' env1 t1)
    (env2 : Ctx n)
    (t2 : QTerm)
    (p2 : TermInCtx' env2 t2)
    (proof : AlphaEq' env1 t1 p1 env2 t2 p2) : gamma env1 t1 p1 = gamma env2 t2 p2 <= \elim t1, p1, t2, p2, proof
        | QVar x, QVarInCtx i p, QVar y, QVarInCtx j q, QVarEq pr               => pmap IVar pr
        | QApp t1 s1, QAppInCtx p1 q1, QApp t2 s2, QAppInCtx p2 q2, QAppEq p q  => pmap2 IApp (gamma-respects-alpha-eq env1 t1 p1 env2 t2 p2 p) (gamma-respects-alpha-eq env1 s1 q1 env2 s2 q2 q)
        | QLam x t1, QLamInCtx p1, QLam y t2, QLamInCtx p2, QLamEq p            => pmap ILam (gamma-respects-alpha-eq (extend env1 x) t1 p1 (extend env2 y) t2 p2 p)


\function
gamma-delta-id
    {n : Nat}
    (t : ITerm n) : gamma (delta t).1 (delta t).2 (delta t).3 = t <= \elim t
        | IVar i        => idp
        | IApp t1 t2    => pmap2 IApp (gamma-delta-id t1) (gamma-delta-id t2)
        | ILam t        => pmap ILam (gamma-delta-id t)


\function
delta-gamma-id
    {n : Nat}
    (env : Ctx n)
    (t : QTerm)
    (p : TermInCtx' env t) : AlphaEq' (delta (gamma env t p)).1 (delta (gamma env t p)).2 (delta (gamma env t p)).3 env t p <= \elim t, p
        | QVar x, QVarInCtx i pr        => QVarEq idp
        | QApp t1 t2, QAppInCtx p1 p2   => QAppEq (delta-gamma-id env t1 p1) (delta-gamma-id env t2 p2)
        | QLam x t, QLamInCtx p         => QLamEq (delta-gamma-id (extend env x) t p)

