\import LC.Util.Ctx
\import LC.Util.Perm
\import LC.Util.RVec

\import Data.Fin
\import Data.Unit
\import Data.Either
\import Data.Nat.Base
\import Data.Nat.Compare


-- N is for named

\data NTerm
    | NVar Nat
    | NApp NTerm NTerm
    | NLam Nat NTerm


-- F is for functor. Maybe rename to M because of monad?

\data FTerm (V : \Set)
    | FVar V
    | FApp (FTerm V) (FTerm V)
    | FLam (FTerm (Either V Unit))


-- I is for index

\data ITerm (n : Nat)
    | IVar (Fin n)
    | IApp (ITerm n) (ITerm n)
    | ILam (ITerm (suc n))


-- Q is for quotient
\data QTerm : \oo-Type
    | QVar (x : Nat)
    | QApp (t1 : QTerm) (t2 : QTerm)
    | QLam (t : QTerm) (act : FinPermAction QTerm) (pr : \Pi (t' : QTerm) -> \Sigma (pi : FinPerm Nat) (act pi t' = t))
