\open ::Data::Either
\open ::Data::Empty
\open ::Data::Unit
\open ::Data::Fin
\open ::Paths


-- like Fin n, but Fun n
\function
Fun
    (n : Nat) : \Type <= \elim n
        | zero  => Empty
        | suc n => Either (Fun n) Unit

\function
from-fin
    {n : Nat}
    (i : Fin n) : Fun n <= \elim n, i
        | suc _, fzero => inr unit
        | suc _, fsuc x => inl (from-fin x)

\function
to-fin
    {n : Nat}
    (f : Fun n) : Fin n <= \elim n
        | suc _ => \case f
            | inr unit => fzero
            | inl x => fsuc (to-fin x)

\function
from-to-fin-id
    {n : Nat}
    (f : Fun n) : from-fin (to-fin f) = f <= \elim n
        | suc _ => \case f
            | inr unit => {?}
            | inl y => {?}


\function
to-from-fin-id
    {n : Nat}
    (i : Fin n) : to-fin (from-fin i) = i <= \elim n, i
        | suc _, fzero => idp
        | suc _, fsuc x => pmap fsuc (to-from-fin-id x)
