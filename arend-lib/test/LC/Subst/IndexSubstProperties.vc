\open ::LC::Subst::Subst
\open ::LC::Term
\open ::LC::RVec

\open ::Combinators
\open ::Data::Bool
\open ::Data::Either
\open ::Data::Empty
\open ::Data::Fin
\open ::Data::Nat::Base
\open ::Data::Nat::Compare
\open ::Data::Unit
\open ::Logic
\open ::Paths


-- Identity substution

\function
gen-vars
    (n : Nat) : RVec n (ITerm n) <= \elim n
        | zero => vnil
        | suc n => snoc (rmap weak (gen-vars n)) (IVar fzero)


\function
identity2 : gen-vars 2 = snoc (snoc  vnil (IVar (fsuc fzero))) (IVar fzero) => idp

\function
identity3 : gen-vars 3 = snoc (snoc (snoc  vnil (IVar (fsuc (fsuc fzero)))) (IVar (fsuc fzero))) (IVar fzero) => idp


-- All index stuff

\function
isubst-right-unit-weak-lemma
    {n m : Nat}
    (i : Fin n)
    (ts : RVec n (ITerm m)) : (rmap weak ts) !! i = weak (ts !! i) <= \elim n, i, ts
        | suc n, fzero, snoc ts t => idp
        | suc n, fsuc i, snoc ts t => isubst-right-unit-weak-lemma i ts


\function
isubst-right-unit-var-helper
    (n : Nat)
    (i : Fin n) : (gen-vars n) !! i = IVar i <= \elim n, i
        | suc n, fzero => idp
        | suc n, fsuc j =>  \let
                                | p => isubst-right-unit-weak-lemma j (gen-vars n)
                                | rec => isubst-right-unit-var-helper n j
                                | q => transport (\lam x => (rmap weak (gen-vars n)) !! j = weak x) rec p
                            \in transport (\lam x => (rmap weak (gen-vars n)) !! j = x) idp q


\function
isubst-assoc-var-helper
    (n m k : Nat)
    (i : Fin n)
    (ts : RVec n (ITerm m))
    (ss : RVec m (ITerm k)) : isubst (ts !! i) ss = rmap (\lam x => isubst x ss) ts !! i <= \elim n, i, ts
        | suc n, fzero, snoc ts t   => idp
        | suc n, fsuc i, snoc ts t  => isubst-assoc-var-helper n m k i ts ss


\function
isubst-weak-lemma-helper-helper
    {n m : Nat}
    (i : Fin n)
    (ss : RVec n (ITerm m)) : rmap weak ss !! i = weak (ss !! i) <= \elim n, i, ss
        | suc n, fzero, snoc ss s => idp
        | suc n, fsuc i, snoc ss s => isubst-weak-lemma-helper-helper i ss


\function
isubst-weak-lemma-helper
    {n m : Nat}
    (t : ITerm n)
    (ss : RVec n (ITerm m)) : isubst (weak t) (snoc (rmap weak ss) (IVar fzero)) = weak (isubst t ss) <= \elim t
        | IVar i => isubst-weak-lemma-helper-helper i ss
        | IApp t1 t2 => pmap2 IApp (isubst-weak-lemma-helper t1 ss) (isubst-weak-lemma-helper t2 ss)
        | ILam t => pmap ILam (isubst-weak-lemma-helper t (snoc (rmap weak ss) (IVar fzero)))


\function
isubst-weak-lemma
    (n m k : Nat)
    (ts : RVec n (ITerm m))
    (ss : RVec m (ITerm k)) : rmap (\lam x => isubst x (snoc (rmap weak ss) (IVar fzero))) (rmap weak ts) = rmap weak (rmap (\lam x => isubst x ss) ts) <= \elim n, ts
        | zero, vnil => idp
        | suc n, snoc ts t => pmap2 snoc (isubst-weak-lemma n m k ts ss) (isubst-weak-lemma-helper t ss)


\function
isubst-right-unit
    {n : Nat}
    (t : ITerm n) : isubst t (gen-vars n) = t <= \elim t
        | IVar i        => isubst-right-unit-var-helper n i
        | IApp t1 t2    => pmap2 IApp (isubst-right-unit t1) (isubst-right-unit t2)
        | ILam t        => pmap ILam (isubst-right-unit t)


\function
isubst-left-unit
    {n m : Nat}
    (i : Fin n)
    (ts : RVec n (ITerm m)) : isubst (IVar i) ts = ts !! i => idp


\function
isubst-assoc
    {n m k : Nat}
    (t : ITerm n)
    (ts : RVec n (ITerm m))
    (ss : RVec m (ITerm k)) : isubst (isubst t ts) ss = isubst t (rmap (\lam x => isubst x ss) ts) <= \elim t
        | IVar i        => isubst-assoc-var-helper n m k i ts ss
        | IApp t1 t2    => pmap2 IApp (isubst-assoc t1 ts ss) (isubst-assoc t2 ts ss)
        | ILam t        => \let
                                | ts' => snoc (rmap weak ts) (IVar fzero)
                                | ss' => snoc (rmap weak ss) (IVar fzero)
                                | p => isubst-assoc t ts' ss'
                                | pt => transport (\lam x => isubst (isubst t ts') ss' = isubst t x) (pmap2 snoc (isubst-weak-lemma n m k ts ss) idp) p
                            \in pmap ILam pt

