\open ::LC::Subst::Subst
\open ::LC::Term

\open ::Data::Either
\open ::Paths

-- Proofs

\function
return-right-unit
    {V : \Type}
    (t : FTerm V) : t `bind` return = t <= \elim t
        | FVar x => idp
        | FApp t1 t2 => pmap2 FApp (return-right-unit t1) (return-right-unit t2)
        | FLam t => pmap FLam (return-right-unit t)


\function
return-left-unit
    {V W : \Type}
    (x : V)
    (k : V -> FTerm W) : ((return x) `bind` k = k x) => idp


\function
bind-assoc
    {A B C : \Type}
    (f : A -> FTerm B)
    (g : B -> FTerm C)
    (t : FTerm A) : (t `bind` f) `bind` g = t `bind` (\lam x => (f x) `bind` g) <= \elim t
        | FVar x => idp
        | FApp t1 t2 => pmap2 FApp (bind-assoc f g t1) (bind-assoc f g t2)
        | FLam t => {?}
