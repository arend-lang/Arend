
\open ::Paths

\open ::Data::Bool

\open ::Equiv

\open ::HITs::Circle

\function
Pointed => \Sigma (A : \Type) (a : A)

\function
Omega (A : Pointed) : Pointed =>
    (A.2 = A.2, idp)

\data Susp (A : \Type)
    | south
    | north
    | merid A I
\with
    | merid a (left) => north
    | merid a (right) => south

\function
meridP {A : \Type} (a : A) : north {A} = south {A} =>
    path (\lam i => merid a i)

\function
meridArcP {A : \Type} (a : A) (i : I) : north {A} = merid a i =>
    path (\lam j => merid a (squeeze i j))

\function
Susp-ind-hetero {A : \Type} (B : Susp A -> \Type) (n : B north) (s : B south) (l : \Pi (a : A) -> Path (\lam i => B (merid a i)) n s)
    (x : Susp A) : B x <=
    \elim x
        | north => n
        | south => s
        | merid a i => l a @ i
        ;

\function
Susp-ind-homo {A : \Type} (B : Susp A -> \Type) (n : B north) (s : B south) (l : \Pi (a : A) -> transport B (meridP a) n = s)
    (x : Susp A) : B x <=
    \elim x
        | north => n
        | south => s
        | merid a i => pathOver (l a) @ i
        ;

\function
lemma651 : Susp Bool =~= S1 =>
    {?}
\where {
    \function
    f (x : Susp Bool) : S1 <=
        \elim x
            | north => base
            | south => base
            | merid (true) _ => base
            | merid (false) i => loop i
            ;

    \function
    g (x : S1) : Susp Bool <=
        \elim x
            | base => north
            | loop i => path (merid false) *> inv (path (merid true)) @ i
            ;

    \function
    p (x : Susp Bool) : g (f x) = x <=
        \elim x
            | north => idp
            | south => path (merid true)
            | merid (true) i => meridArcP true i
            | merid (false) i => {?}
            ;
}
