\import Algebra.Ring
\import Arith.Nat
\import Function.Meta
\import Logic
\import Order.LinearOrder
\import Paths

\class ReducedRing \extends Ring {
  | isReduced {a : E} : a * a = 0 -> a = 0

  \lemma noNilpotent {a : E} {n : Nat} (p : pow a n = 0) : a = 0
    => aux $ pmap (pow a) (inv $ <=_exists $ LinearOrder.<_<= id<pow2) *> pow_+  *> pmap (`* pow a (NatSemiring.pow 2 n -' n)) p *> zro_*-left
    \where
      \lemma aux {a : E} {n : Nat} (p : pow a (NatSemiring.pow 2 n) = 0) : a = 0 \elim n
        | 0 => inv ide-left *> p
        | suc n => aux $ isReduced (inv pow_+ *> p)
}

\class ReducedCRing \extends ReducedRing, CRing

\class ImpotentRing \extends ReducedRing
  | isImpotent {a : E} : a * a = a -> (a = 0) || (a = 1)

\class ImpotentCRing \extends ImpotentRing, ReducedCRing