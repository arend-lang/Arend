\import Algebra.Group
\import Algebra.Monoid
\import Category
\import Paths

\instance Aut {A : \1-Type} (a : A) : Group (a = a)
  | ide => idp
  | * => *>
  | ide-left {x} => idp_*> x
  | ide-right => idp
  | *-assoc {x} {y} {z} => *>-assoc x y z
  | inverse => inv
  | inverse-left {x} => inv_*> x

\func End {C : Precat} (c : C) : Monoid (Hom c c) \cowith
  | ide => id c
  | * => âˆ˜
  | ide-left => id-left
  | ide-right => id-right
  | *-assoc => o-assoc
