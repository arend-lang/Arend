\import Algebra.Group.Category
\import Algebra.Module
\import Algebra.Ring

\record LinearMap {R : Ring} \extends AddGroupHom {
  \override Dom : LModule { | R => R }
  \override Cod : LModule { | R => R }
  | func-*c {r : R} {x : Dom} : func (r *c x) = r *c func x
}

\meta LinearMap' A B => LinearMap { | R => _ | Dom => A | Cod => B }

\record BilinearMap {R : Ring} (A B C : LModule' R) (\coerce func : A -> B -> C)
  | linear-left {b : B} : LinearMap' A C { | func => func __ b }
  | linear-right {a : A} : LinearMap' B C { | func => func a }
