\import Algebra.Monoid

\class Group \extends Monoid {
  | inverse : E -> E
  | inverse-left (x : E) : inverse x * x = id
  | inverse-right (x : E) : x * inverse x = id
}

\class AddGroup \extends AddMonoid => Group {
  | inverse => addInverse
  | inverse-left => addInverse-left
  | inverse-right => addInverse-right
}

\class CGroup \extends Group, CMonoid

\class AbGroup \extends AddGroup, AbMonoid => CGroup