\import Homotopy.Pointed
\import Homotopy.Pushout

\func Susp (A : \Type) => PushoutData {A} (\lam _ => ()) (\lam _ => ())
  \where {
    \func rec {A B : \Type} (b1 b2 : B) (f : A -> b1 = b2) (x : Susp A) : B \elim x
      | pinl _ => b1
      | pinr _ => b2
      | pglue a i => f a @ i

    \func pointed (A : \Type) => \new Pointed (Susp A) north

    \func pushout (A : \Type) => pushoutData {A} (\lam _ => ()) (\lam _ => ())
  }

\func north {A : \Type} : Susp A => pinl ()

\func south {A : \Type} : Susp A => pinr ()

\func pmerid {A : \Type} (a : A) : north = south => path (pglue a)
