\import Category
\import Paths
\import Set

\record SetHom (Dom Cod : BaseSet)
  | \coerce func : Dom -> Cod

\instance SetCat : Cat \Set
  | Hom X Y => X -> Y
  | id _ => \lam x => x
  | o g f => \lam x => g (f x)
  | id-left _ => idp
  | id-right _ => idp
  | o-assoc _ _ _ => idp
  | univalence (e : Iso) =>
    \let p => path (iso e.f e.inv (\lam x => path ((e.f_inv @ __) x)) (\lam y => path ((e.inv_f @ __) y)))
    \in (p, path (\lam i x => transport_pi (\lam _ => e.dom) (\lam Z => Z) p (\lam x => x) x @ i))
