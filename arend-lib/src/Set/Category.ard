\import Category
\import Paths
\import Set

\record SetHom (Dom Cod : BaseSet)
  | func : Dom -> Cod

\instance SetCat : Cat \Set
  | Hom X Y => X -> Y
  | id _ => \lam x => x
  | o g f => \lam x => g (f x)
  | id-left _ => idp
  | id-right _ => idp
  | o-assoc _ _ _ => idp
  | univalence {X} {Y} f g p q =>
    \let p => path (iso f g (\lam x => path (\lam i => (p @ i) x)) (\lam y => path (\lam i => (q @ i) y)))
    \in (p, path (\lam i x => transport_pi (\lam _ => X) (\lam Z => Z) p (\lam x => x) x @ i))
