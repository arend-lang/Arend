\import Logic.Meta
\import Order.PartialOrder
\import Set.Subset

\record Filter {A : Poset} (\coerce F : A -> \Prop)
  | filter-mono {a b : A} : a <= b -> F a -> F b
  | filter-inh : ∃ (a : A) (F a)
  | filter-lb {a b : A} : F a -> F b -> ∃ (c : A) (F c) (c <= a) (c <= b)

\record SetFilter (X : \Set) \extends Filter
  | A => SetPoset X

\record ProperFilter \extends SetFilter
  | isProper {U : Set X} : F U -> ∃ U