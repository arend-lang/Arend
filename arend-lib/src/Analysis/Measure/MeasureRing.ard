\import Algebra.Ring.Boolean
\import Arith.Real.LowerReal
\import Function.Meta
\import Paths
\import Topology.NormedAbGroup.ExtendedNormedAbGroup

\class PseudoMeasureRing \extends BooleanPseudoRing, ExtendedPseudoNormedAbGroup
  | lnorm-positive {x : E} : 0 LowerRealAbMonoid.<= lnorm x
  | lnorm-measure {x y : E} : lnorm x LowerRealAbMonoid.+ lnorm y = lnorm (x ∨ y) LowerRealAbMonoid.+ lnorm (x ∧ y)
  | lnorm-mono {x y : E} : x <= y -> lnorm x LowerRealAbMonoid.<= lnorm y
  | lnorm-mono p => transport2 (LowerRealAbMonoid.<=) LowerRealAbMonoid.zro-left (lnorm-measure *> pmap2 (lnorm __ LowerRealAbMonoid.+ __) (pmap2 (+) (+-assoc *> pmap (_ +) (pmap (`+ _) (*-comm *> p) *> double=0) *> zro-right) diff_* *> zro-right) (pmap lnorm diff_* *> lnorm_zro) *> LowerRealAbMonoid.zro-right) $ LowerRealAbMonoid.<=_+ lnorm-positive LowerRealAbMonoid.<=-refl
  | lnorm_negative => pmap lnorm neative=id
  | lnorm_+ => transport (LowerRealAbMonoid.`<= _) (lnorm-measure *> pmap2 (lnorm __ LowerRealAbMonoid.+ __) (inv +_diff) (pmap lnorm diff_*_diff *> lnorm_zro) *> LowerRealAbMonoid.zro-right) $ LowerRealAbMonoid.<=_+ (lnorm-mono diff_<=) (lnorm-mono diff_<=)

\class PseudoMeasureAlgebra \extends PseudoMeasureRing, BooleanRing