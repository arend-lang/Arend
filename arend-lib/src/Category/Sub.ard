\import Category
\import Equiv (Embedding, Retraction)
\import Paths

\func subPrecat {C : Precat} {X : \Type} (f : X -> C) : Precat X \cowith
  | Hom x y => Hom (f x) (f y)
  | id x => id (f x)
  | o h g => o h g
  | id-left g => id-left g
  | id-right g => id-right g
  | o-assoc g h k => o-assoc g h k

\func subCat {C : Cat} {X : \Type} (e : Embedding {X} {C}) : Cat \cowith
  | Precat => subPrecat e.f
  | univalence {x} {y} f g p q =>
    \let (t,r) => univalence f g p q
    \in (Retraction.sec {e.isEmb x y} t, pmap (transport (Hom (e.f x)) __ (id (e.f x))) (Retraction.f_sec {e.isEmb x y} t) *> r)
