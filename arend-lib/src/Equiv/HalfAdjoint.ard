\import Equiv
\import Paths

\record HAEquiv (f_ret_f=f_sec_f : \Pi (x : A) -> pmap f (ret_f x) = f_sec (f x)) \extends QEquiv
  \where
    \coerce fromQEquiv (e : QEquiv) : HAEquiv \cowith
      | Section => e
      | f_sec y => inv (e.f_sec (e.f (e.ret y))) *> pmap e.f (e.ret_f (e.ret y)) *> e.f_sec y
      | f_ret_f=f_sec_f x => inv (rotatePathLeft (
        pmap e.f (e.ret_f (e.ret (e.f x))) *> e.f_sec (e.f x)               ==< pmap (\lam r => pmap e.f r *> e.f_sec (e.f x)) (homotopy_app-comm (\lam x => e.ret (e.f x)) e.ret_f x) >==
        pmap (\lam x => e.f (e.ret (e.f x))) (e.ret_f x) *> e.f_sec (e.f x) ==< homotopy-isNatural (\lam y => e.f (e.sec y)) (\lam y => y) e.f_sec (pmap e.f (e.ret_f x))              >==
        e.f_sec (e.f (e.ret (e.f x))) *> pmap e.f (e.ret_f x)               `qed
      ))
