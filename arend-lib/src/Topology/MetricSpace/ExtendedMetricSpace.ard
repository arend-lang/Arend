\import Algebra.Monoid
\import Algebra.Pointed
\import Arith.Real
\import Arith.Real.InfReal
\import Arith.Real.LowerReal
\import Function.Meta
\import Logic
\import Logic.Meta
\import Meta
\import Order.PartialOrder
\import Order.StrictOrder
\import Set.Subset
\import Topology.MetricSpace.LowerMetricSpace
\import Topology.UniformSpace
\open RealAbGroup(half,half>0)

\class ExtendedPseudoMetricSpace \extends LowerPseudoMetricSpace, StronglyRegularUniformSpace
  | edist : E -> E -> InfReal
  | edist-refl {x : E} : edist x x = zro
  | edist-symm {x y : E} : edist x y = edist y x
  | edist-triang {x y z : E} : edist x z <= edist x y + edist y z
  | edist-uniform {C : Set (Set E)} : isUniform C <-> ∃ (eps : LowerReal) (0 < eps) ∀ x ∃ (U : C) ∀ {y} (ldist x y < eps -> U y)
  | edist-ldist {x y : E} : ldist x y = {ExtendedLowerReal} edist x y

  | uniform-strongly-star Cu => \case ldist-uniform-real.1 Cu \with {
    | inP (eps,eps>0,h) => inP (\lam U => ∃ (x : E) (U = \lam y => ldist x y < half (half eps)), ldist-uniform-real.2 $ inP (half (half eps), half>0 (half>0 eps>0), \lam x => inP $ later (_, inP (x,idp), \lam d => d)), \lam {_} (inP (x,idp)) => \case h x \with {
      | inP (U,CU,g) => inP (U, CU, \lam {_} (inP (y,idp)) => {?} {- TODO \case real-located $ transport (RealAbGroup.`< _) zro-right $ <_+-right (half eps) $ half>0 (half>0 eps>0) \with {
        | byLeft e => byLeft \lam (z,(dx,dy)) => <-irreflexive $ e <∘ transport (_ <) half+half (ldist-triang <∘r RealAbGroup.<_+ dx (rewrite ldist-symm in dy))
        | byRight e => byRight \lam {z} d => g $ ldist-triang <∘r transport (_ <) (+-assoc *> pmap (_ +) half+half *> half+half) (RealAbGroup.<_+ e d)
      } -})
    })
  }
