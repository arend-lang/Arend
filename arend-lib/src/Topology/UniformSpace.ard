\import Logic.Meta
\import Order.Lattice
\import Set.Filter
\import Set.Subset
\import Topology.CoverSpace
\open Set
\open Bounded(top)
\open ClosurePrecoverSpace

\class UniformSpace \extends CompletelyRegularCoverSpace
  | isUniform : Set (Set E) -> \Prop
  | uniform-cover {C : Set (Set E)} : isUniform C -> \Pi (x : E) -> ∃ (U : C) (U x)
  | uniform-top : isUniform (single top)
  | uniform-extend {C D : Set (Set E)} : isUniform C -> (\Pi {U : Set E} -> C U -> ∃ (V : D) (U ⊆ V)) -> isUniform D
  | uniform-inter {C D : Set (Set E)} : isUniform C -> isUniform D -> isUniform \lam U => ∃ (V : C) (W : D) (U = V ∧ W)
  | uniform-star {C : Set (Set E)} : isUniform C -> ∃ (D : isUniform) ∀ {V : D} ∃ (U : C) ∀ {V' : D} (Given (V ∧ V') -> V' ⊆ U)

  | isCauchy => Closure isUniform
  | cauchy-cover Cc x => closure-filter (pointFilter x) (\lam Cu => uniform-cover Cu x) Cc
  | cauchy-top => closure-top idp
  | cauchy-extend => closure-extends
  | cauchy-trans Cc e => closure-trans Cc e idp
  | isCompletelyRegular => isCompletelyRegular {ClosureRegularCoverSpace isUniform uniform-cover uniform-star}