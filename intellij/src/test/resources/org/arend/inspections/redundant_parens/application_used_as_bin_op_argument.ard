\open Nat (+)

\func test1 => <weak_warning descr="Redundant parentheses">(f 1 2)</weak_warning> + 3
\func test2 => 3 + <weak_warning descr="Redundant parentheses">(f 1 2)</weak_warning>
\func test3 => 3 `f2` <weak_warning descr="Redundant parentheses">(f 1 2)</weak_warning>
\func test5 => 3 `f2` (pair 0).1
\func test4 => 3 `f2` (\new Unit)

\func pair (n : Nat) => (n, n)
\record Unit

\func f (_ _ : Nat) : Nat => 0
\func f2 {A : \Type} {B : \Type} (_ : A) (_ : B) => <warning descr="Goal">{?}</warning>

\func test6 => <weak_warning descr="Redundant parentheses">(suc 0)</weak_warning> + 1 + 2
\func test7 => 0 + <weak_warning descr="Redundant parentheses">(suc 1)</weak_warning> + 2
\func test8 => 0 + 1 + <weak_warning descr="Redundant parentheses">(suc 2)</weak_warning>

\func test9 => suc (suc 0) + 1
\func test10 => 0 + suc (suc 1)

\func test12 => suc (suc 0) + 1 + 2
\func test13 => 0 + suc (suc 1) + 2
\func test14 => 0 + 1 + suc (suc 2)

\func test15 {A : \Type} (l : Array A) (a : A) => a :: (:: \levels \lp \lh a l)
\func test16 {A : \Type} (l : Array A) (a : A) => a :: (:: \lp \lh a l)

\func test17 => + (suc 0) (suc 1)
\func test18 => +(suc 0) (suc 1)

\func test19 => (`+ 2) 1 = 3