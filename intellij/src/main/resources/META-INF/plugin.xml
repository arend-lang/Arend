<idea-plugin>
    <id>org.arend.lang</id>
    <name>Arend</name>
    <version>1.0.0</version>
    <vendor>JetBrains</vendor>

    <description><![CDATA[
      <a href="https://arend-lang.github.io/">Arend</a> is a proof assistant based on homotopy type theory.
      This plugin adds support for the Arend language.
      To learn more about this plugin, visit the <a href="https://arend-lang.github.io/about/intellij-features">website</a>.
    ]]></description>

    <change-notes><![CDATA[
      The first stable release. It implements the following features:
      <ul>
        <li>Syntax highlighting</li>
        <li>Code completion</li>
        <li>Find usages</li>
        <li>Quick documentation</li>
        <li>Parameter hints</li>
        <li>Class hierarchy</li>
        <li>Code formatter</li>
        <li>Auto import</li>
        <li>"Implement missing fields" quick fix</li>
        <li>Move Refactoring</li>
        <li>Incremental typechecking</li>
      </ul>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="192.5118"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>org.jetbrains.plugins.yaml</depends>

    <extensions defaultExtensionNs="com.intellij">

        <!-- Module -->

        <moduleType id="AREND_MODULE" implementationClass="org.arend.module.ArendModuleType"/>
        <moduleBuilder builderClass="org.arend.module.util.ArendModuleBuilder"/>
        <projectStructureDetector
                implementation="org.arend.module.util.ArendProjectStructureDetector"/>
        <library.type implementation="org.arend.module.ArendLibraryType"/>
        <sdkType implementation="org.arend.module.ArendSdkType"/>
        <moduleConfigurationEditorProvider implementation="org.arend.module.util.ArendModuleConfigEditorProvider"/>

        <!-- Startup -->

        <postStartupActivity implementation="org.arend.ArendStartupActivity"/>

        <!-- Typed Handler -->

        <typedHandler implementation="org.arend.codeInsight.ArendTypedHandler"/>

        <!-- File Type -->

        <fileType language="Arend" implementationClass="org.arend.ArendFileType" name="Arend" extensions="ard" />

        <!-- Parser -->

        <lang.parserDefinition language="Arend" implementationClass="org.arend.parser.ArendParserDefinition"/>

        <!-- Injection -->

        <fileType language="INJECTION_TEXT" implementationClass="org.arend.injection.InjectionTextFileType" name="INJECTION_TEXT" extensions="itxt" />
        <lang.parserDefinition language="INJECTION_TEXT" implementationClass="org.arend.injection.InjectionTextParserDefinition"/>
        <lang.ast.factory language="INJECTION_TEXT" implementationClass="org.arend.injection.InjectionTextASTFactory"/>
        <multiHostInjector implementation="org.arend.injection.ArendLanguageInjector"/>

        <!-- Name Validator -->

        <lang.namesValidator language="Arend" implementationClass="org.arend.refactoring.ArendNamesValidator"/>

        <!-- Syntax Highlighter -->

        <lang.syntaxHighlighterFactory language="Arend"
                                       implementationClass="org.arend.highlight.ArendSyntaxHighlighterFactory"/>

        <!-- Commenter -->

        <lang.commenter language="Arend" implementationClass="org.arend.commenter.ArendCommenter"/>

        <!-- Matchers -->

        <lang.braceMatcher language="Arend" implementationClass="org.arend.ArendBraceMatcher"/>

        <!-- Documentation -->

        <lang.documentationProvider language="Arend"
                                    implementationClass="org.arend.ArendDocumentationProvider"/>

        <lang.implementationTextSelectioner language="Arend"
                                            implementationClass="org.arend.ArendImplementationTextSelectioner"/>

        <!-- Structure View -->

        <lang.psiStructureViewFactory language="Arend"
                                      implementationClass="org.arend.structure.ArendPsiStructureViewFactory"/>

        <!-- Hierarchy -->

        <callHierarchyProvider language="Arend" implementationClass="org.arend.hierarchy.call.ArendCallHierarchyProvider"/>
        <typeHierarchyProvider language="Arend" implementationClass="org.arend.hierarchy.clazz.ArendClassHierarchyProvider"/>

        <!-- Usages Provider -->

        <referencesSearch implementation="org.arend.search.ArendCustomSearcher"/>

        <lang.findUsagesProvider language="Arend"
                                 implementationClass="org.arend.search.ArendFindUsagesProvider"/>

        <fileStructureGroupRuleProvider
                implementation="org.arend.search.ArendDefGroupingRuleProvider" />

        <usageTypeProvider implementation="org.arend.search.ArendUsageTypeProvider"/>

        <!--fileStructureGroupRuleProvider
                implementation="org.arend.search.ArendDefClassGroupingRuleProvider" />
        <fileStructureGroupRuleProvider
                implementation="org.arend.search.ArendDefDataGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.arend.search.ArendDefFunctionGroupingRuleProvider">
        <fileStructureGroupRuleProvider
                implementation="org.arend.search.ArendClassFieldGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.arend.search.ArendDefInstanceGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.arend.search.ArendConstructorGroupingRuleProvider"-->

        <!-- Navigation -->

        <gotoClassContributor implementation="org.arend.navigation.ArendClassNavigationContributor"/>
        <gotoSymbolContributor
                implementation="org.arend.navigation.ArendSymbolNavigationContributor"/>

        <!-- Hints -->

        <declarationRangeHandler key="org.arend.lang.core.psi.ArendDefClass"
                                 implementationClass="org.arend.codeInsight.ArendDeclarationRangeHandler"/>
        <declarationRangeHandler key="org.arend.lang.core.psi.ArendDefData"
                                 implementationClass="org.arend.codeInsight.ArendDeclarationRangeHandler"/>
        <declarationRangeHandler key="org.arend.lang.core.psi.ArendDefInstance"
                                 implementationClass="org.arend.codeInsight.ArendDeclarationRangeHandler"/>
        <declarationRangeHandler key="org.arend.lang.core.psi.ArendDefFunction"
                                 implementationClass="org.arend.codeInsight.ArendDeclarationRangeHandler"/>

        <!-- Formatter -->

        <lang.formatter language="Arend" implementationClass="org.arend.formatting.ArendFormattingModelBuilder"/>
        <codeStyleSettingsProvider implementation="org.arend.formatting.ArendCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider implementation="org.arend.formatting.ArendLanguageCodeStyleSettingsProvider"/>
        <editor.backspaceModeOverride language="Arend" implementationClass="org.arend.formatting.ArendBackspaceDisabler"/>
        <enterHandlerDelegate implementation="org.arend.formatting.ArendEnterAtIndentHandler" order="first"/>

        <!-- Code Insight -->

        <codeInsight.parameterInfo language="Arend" implementationClass="org.arend.codeInsight.ArendParameterInfoHandler"/>

        <completion.contributor language="Arend" implementationClass="org.arend.codeInsight.completion.ArendCompletionContributor"/>

        <completion.confidence language="Arend" implementationClass="org.arend.codeInsight.completion.ArendCompletionConfidence" id="arendCompletion" />

        <completion.contributor language="yaml" implementationClass="org.arend.codeInsight.completion.YAMLCompletionContributor"/>

        <!-- Annotation -->

        <annotator language="yaml" implementationClass="org.arend.annotation.YAMLHighlightingAnnotator"/>

        <!-- Intention Actions -->
        <intentionAction>
            <className>org.arend.intention.ImplementFieldsInNewExprIntention</className>
            <category>Arend</category>
        </intentionAction>

        <intentionAction>
            <className>org.arend.intention.ImplementFieldsInCoClauseIntention</className>
            <category>Arend</category>
        </intentionAction>

        <intentionAction>
            <className>org.arend.intention.SplitAtomPatternIntention</className>
            <category>Arend</category>
        </intentionAction>

        <!-- <highlightRangeExtension implementation="org.arend.annotation.ArendHighlightRangeExtension"/> -->

        <daemon.changeLocalityDetector implementation="org.arend.highlight.ArendChangeLocalityDetector"/>

        <!-- Line Marker Providers -->

        <runLineMarkerContributor language="Arend"
                                  implementationClass="org.arend.typechecking.execution.TypeCheckRunLineMarkerContributor"/>

        <codeInsight.lineMarkerProvider language="Arend" implementationClass="org.arend.codeInsight.ArendLineMarkerProvider"/>

        <!-- Color Settings -->

        <colorSettingsPage implementation="org.arend.editor.ArendColorSettingsPage"/>

        <!-- Folding -->

        <lang.foldingBuilder language="Arend" implementationClass="org.arend.folding.ArendFoldingBuilder"/>
        <lang.foldingBuilder language="Arend" implementationClass="org.arend.folding.ImportFoldingBuilder"/>

        <!-- Refactoring -->

        <renameInputValidator implementation="org.arend.refactoring.ArendRenameInputValidator"/>
        <lang.refactoringSupport language="Arend" implementationClass="org.arend.refactoring.ArendRefactoringSupportProvider"/>
        <renamePsiElementProcessor implementation="org.arend.refactoring.ArendRenamePsiElementProcessor" />
        <moveFileHandler implementation="org.arend.refactoring.ArendMoveFileHandler"/>
        <refactoring.moveHandler implementation="org.arend.refactoring.move.ArendMoveHandlerDelegate"/>
        <renameHandler implementation="org.arend.refactoring.ArendRenameModuleHandler"/>

        <!-- Run Configurations -->

        <programRunner implementation="org.arend.typechecking.execution.TypeCheckRunner"/>
        <configurationType
                implementation="org.arend.typechecking.execution.configurations.TypecheckRunConfigurationType"/>
        <runConfigurationProducer
                implementation="org.arend.typechecking.execution.TypecheckRunConfigurationProducer"/>

        <!-- Indices -->

        <stubIndex implementation="org.arend.psi.stubs.index.ArendNamedElementIndex"/>
        <stubIndex implementation="org.arend.psi.stubs.index.ArendDefinitionIndex"/>
        <stubIndex implementation="org.arend.psi.stubs.index.ArendGotoClassIndex"/>

        <stubElementTypeHolder class="org.arend.psi.ArendElementTypes"/>

        <!-- Lookup Filters -->

        <lookup.charFilter implementation="org.arend.codeInsight.ArendCharFilter"/>

        <!-- Highlight Filter -->

        <problemFileHighlightFilter implementation="org.arend.highlight.ArendProblemHighlightFilter"/>

        <!-- Order Root types -->

        <orderRootType implementation="org.arend.module.orderRoot.ArendConfigOrderRootType"/>
        <OrderRootTypeUI key="AREND_CONFIG" implementationClass="org.arend.module.orderRoot.ArendConfigOrderRootTypeUIFactory"/>

        <!-- Services -->

        <projectService serviceInterface="org.arend.typechecking.TypeCheckingService"
                        serviceImplementation="org.arend.typechecking.TypeCheckingServiceImpl"/>

        <projectService serviceImplementation="org.arend.typechecking.BinaryFileSaver"/>

        <projectService serviceInterface="org.arend.resolving.ArendResolveCache"
                        serviceImplementation="org.arend.resolving.ArendResolveCacheImpl"/>

        <projectService serviceImplementation="org.arend.toolWindow.errors.ArendMessagesService"/>

        <projectService serviceImplementation="org.arend.typechecking.error.ErrorService"/>

        <projectService serviceImplementation="org.arend.psi.listener.ArendPsiListenerService"/>

        <applicationService serviceImplementation="org.arend.typechecking.DefinitionBlacklistService"/>

        <moduleService serviceImplementation="org.arend.module.config.ArendModuleConfigService"/>

        <applicationService serviceImplementation="org.arend.settings.ArendSettings"/>

        <projectService serviceImplementation="org.arend.settings.ArendProjectSettings"/>

        <!-- Configuration Options -->

        <editorSmartKeysConfigurable instance="org.arend.editor.ArendSmartKeysConfigurable"/>
        <autoImportOptionsProvider instance="org.arend.editor.ArendAutoImportConfigurable"/>
        <applicationConfigurable groupId="language" displayName="Arend" id="preferences.language.Arend" instance="org.arend.editor.ArendConfigurable"/>

        <!-- Tool Windows -->

        <toolWindow id="Arend Errors" anchor="bottom" factoryClass="org.arend.toolWindow.errors.ArendMessagesFactory"/>
    </extensions>

    <project-components>
        <component>
            <implementation-class>org.arend.highlight.ArendHighlightingPassFactory</implementation-class>
        </component>
        <component>
            <implementation-class>org.arend.highlight.TypecheckerPassFactory</implementation-class>
        </component>
        <component>
            <implementation-class>org.arend.highlight.SilentTypecheckerPassFactory</implementation-class>
        </component>
    </project-components>

    <actions>
        <action id="Arend.NewArendFile"
                class="org.arend.actions.ArendCreateFileAction"
                text="Arend File"
                description="Create new Arend file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>

    </actions>

</idea-plugin>
