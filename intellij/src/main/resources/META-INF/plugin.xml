<idea-plugin>
    <id>org.vclang.lang</id>
    <name>Vclang</name>
    <version>0.0.1</version>
    <vendor url="https://github.com/mchernyavsky/intellij-vclang"/>

    <description><![CDATA[
      Vclang language support
    ]]></description>

    <change-notes><![CDATA[
      Release 0.0.1: Initial release.<br>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="162"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <extensions defaultExtensionNs="com.intellij">

        <!-- Module -->

        <moduleType id="VCLANG_MODULE" implementationClass="org.vclang.ide.idea.VcModuleType"/>
        <moduleBuilder builderClass="org.vclang.ide.idea.VcModuleBuilder"/>
        <projectStructureDetector implementation="org.vclang.ide.idea.VcProjectStructureDetector"/>

        <!-- Vclang -->

        <!-- File-type Factory -->

        <fileTypeFactory implementation="org.vclang.lang.VcFileTypeFactory"/>

        <!-- Parser -->

        <lang.parserDefinition language="Vclang" implementationClass="org.vclang.lang.core.parser.VcParserDefinition"/>

        <!-- Syntax Highlighter -->

        <lang.syntaxHighlighterFactory language="Vclang" implementationClass="org.vclang.ide.highlight.VcSyntaxHighlighterFactory"/>

        <!-- Commenter -->

        <lang.commenter language="Vclang" implementationClass="org.vclang.ide.commenter.VcCommenter"/>

        <!-- Matchers -->

        <lang.braceMatcher language="Vclang" implementationClass="org.vclang.ide.typing.VcBraceMatcher"/>

        <!-- Doc-Provider -->

        <lang.documentationProvider language="Vclang" implementationClass="org.vclang.ide.docs.VcDocumentationProvider"/>

        <!-- Structure View -->

        <lang.psiStructureViewFactory language="Vclang" implementationClass="org.vclang.ide.structureView.VcPsiStructureViewFactory"/>

        <!-- Usages Provider -->

        <lang.findUsagesProvider language="Vclang" implementationClass="org.vclang.ide.search.VcFindUsagesProvider"/>
        <fileStructureGroupRuleProvider implementation="org.vclang.ide.search.VcDefClassGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider implementation="org.vclang.ide.search.VcDefClassViewGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider implementation="org.vclang.ide.search.VcDefDataGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider implementation="org.vclang.ide.search.VcDefFunctionGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider implementation="org.vclang.ide.search.VcClassFieldGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider implementation="org.vclang.ide.search.VcClassImplementGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider implementation="org.vclang.ide.search.VcClassViewFieldGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider implementation="org.vclang.ide.search.VcDefInstanceGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider implementation="org.vclang.ide.search.VcConstructorGroupingRuleProvider"/>

        <!-- Navigation -->

        <gotoClassContributor implementation="org.vclang.ide.navigation.goto.VcClassNavigationContributor"/>
        <gotoSymbolContributor implementation="org.vclang.ide.navigation.goto.VcSymbolNavigationContributor"/>

        <!-- Hints -->

        <declarationRangeHandler key="org.vclang.lang.core.psi.VcDefClass" implementationClass="org.vclang.ide.hints.VcDeclarationRangeHandler"/>
        <declarationRangeHandler key="org.vclang.lang.core.psi.VcDefData" implementationClass="org.vclang.ide.hints.VcDeclarationRangeHandler"/>
        <declarationRangeHandler key="org.vclang.lang.core.psi.VcDefInstance" implementationClass="org.vclang.ide.hints.VcDeclarationRangeHandler"/>
        <declarationRangeHandler key="org.vclang.lang.core.psi.VcDefFunction" implementationClass="org.vclang.ide.hints.VcDeclarationRangeHandler"/>

        <!-- Annotator -->

        <annotator language="Vclang" implementationClass="org.vclang.ide.annotator.VcHighlightingAnnotator"/>

        <!-- Line Marker Providers -->

        <runLineMarkerContributor language="Vclang" implementationClass="org.vclang.ide.typecheck.execution.lineMarker.TypecheckRunLineMarkerContributor"/>

        <!-- Color Settings -->

        <colorSettingsPage implementation="org.vclang.ide.colors.VcColorSettingsPage"/>

        <!-- Folding -->

        <lang.foldingBuilder language="Vclang" implementationClass="org.vclang.ide.folding.VcFoldingBuilder"/>

        <!-- Run Configurations -->

        <programRunner implementation="org.vclang.ide.typecheck.execution.runners.TypeCheckRunner"/>
        <configurationType implementation="org.vclang.ide.typecheck.execution.configurations.TypeCheckConfigurationType"/>
        <runConfigurationProducer implementation="org.vclang.ide.typecheck.execution.actions.TypeCheckRunConfigurationProducer"/>

        <!-- Indices -->

        <stubIndex implementation="org.vclang.lang.core.stubs.index.VcNamedElementIndex"/>
        <stubIndex implementation="org.vclang.lang.core.stubs.index.VcDefinitionIndex"/>
        <stubIndex implementation="org.vclang.lang.core.stubs.index.VcGotoClassIndex"/>

        <!-- Refactoring -->

        <lang.namesValidator language="Vclang" implementationClass="org.vclang.lang.refactoring.VcNamesValidator"/>

        <!-- Services -->

        <projectService serviceInterface="org.vclang.ide.typecheck.TypeCheckingService"
                        serviceImplementation="org.vclang.ide.typecheck.TypeCheckingServiceImpl"/>

    </extensions>

    <actions>
        
        <action id="VcFormatVclang.PrettyPrinterFormat" class="org.vclang.ide.actions.VcPrettyPrinterFormatAction"
                text="Reformat code with PrettyPrinter" description="Format current file with PrettyPrinter">
            <add-to-group group-id="CodeFormatGroup" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift X"/>
        </action>

        <action id="PreludeCache" class="org.vclang.ide.actions.VcPreludeCacheAction"
                text="Generate Prelude Cache" description="Generate prelude cache">
            <add-to-group group-id="RunMenu" anchor="before" relative-to-action="RunnerActions"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift D"/>
        </action>

        <action id="Vclang.NewVclangFile"
                class="org.vclang.ide.actions.VcCreateFileAction"
                text="Vclang File"
                description="Create new Vclang file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>

    </actions>

</idea-plugin>
