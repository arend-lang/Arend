<idea-plugin>
    <id>org.vclang.lang</id>
    <name>Vclang</name>
    <version>0.0.1</version>
    <vendor url="https://github.com/mchernyavsky/intellij-vclang"/>

    <description><![CDATA[
      Vclang language support
    ]]></description>

    <change-notes><![CDATA[
      Release 0.0.1: Initial release.<br>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="162"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <extensions defaultExtensionNs="com.intellij">

        <!-- Module -->

        <moduleType id="VCLANG_MODULE" implementationClass="org.vclang.module.VcModuleType"/>
        <moduleBuilder builderClass="org.vclang.module.util.VcModuleBuilder"/>
        <projectStructureDetector
                implementation="org.vclang.module.util.VcProjectStructureDetector"/>

        <!-- Vclang -->

        <!-- File-type Factory -->

        <fileTypeFactory implementation="org.vclang.VcFileTypeFactory"/>

        <!-- Parser -->

        <lang.parserDefinition language="Vclang"
                               implementationClass="org.vclang.parser.VcParserDefinition"/>

        <!-- Syntax Highlighter -->

        <lang.syntaxHighlighterFactory language="Vclang"
                                       implementationClass="org.vclang.highlight.VcSyntaxHighlighterFactory"/>

        <!-- Commenter -->

        <lang.commenter language="Vclang" implementationClass="org.vclang.commenter.VcCommenter"/>

        <!-- Matchers -->

        <lang.braceMatcher language="Vclang" implementationClass="org.vclang.VcBraceMatcher"/>

        <!-- Documentation -->

        <lang.documentationProvider language="Vclang"
                                    implementationClass="org.vclang.VcDocumentationProvider"/>

        <!-- Structure View -->

        <lang.psiStructureViewFactory language="Vclang"
                                      implementationClass="org.vclang.structure.VcPsiStructureViewFactory"/>

        <!-- Usages Provider -->

        <lang.findUsagesProvider language="Vclang"
                                 implementationClass="org.vclang.search.VcFindUsagesProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.vclang.search.VcDefClassGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.vclang.search.VcDefClassViewGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.vclang.search.VcDefDataGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.vclang.search.VcDefFunctionGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.vclang.search.VcClassFieldGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.vclang.search.VcClassViewFieldGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.vclang.search.VcDefInstanceGroupingRuleProvider"/>
        <fileStructureGroupRuleProvider
                implementation="org.vclang.search.VcConstructorGroupingRuleProvider"/>

        <!-- Navigation -->

        <gotoClassContributor implementation="org.vclang.navigation.VcClassNavigationContributor"/>
        <gotoSymbolContributor
                implementation="org.vclang.navigation.VcSymbolNavigationContributor"/>

        <!-- Hints -->

        <declarationRangeHandler key="org.vclang.lang.core.psi.VcDefClass"
                                 implementationClass="org.vclang.codeInsight.VcDeclarationRangeHandler"/>
        <declarationRangeHandler key="org.vclang.lang.core.psi.VcDefData"
                                 implementationClass="org.vclang.codeInsight.VcDeclarationRangeHandler"/>
        <declarationRangeHandler key="org.vclang.lang.core.psi.VcDefInstance"
                                 implementationClass="org.vclang.codeInsight.VcDeclarationRangeHandler"/>
        <declarationRangeHandler key="org.vclang.lang.core.psi.VcDefFunction"
                                 implementationClass="org.vclang.codeInsight.VcDeclarationRangeHandler"/>

        <!-- Annotation -->

        <annotator language="Vclang"
                   implementationClass="org.vclang.annotation.VcHighlightingAnnotator"/>

        <!-- Line Marker Providers -->

        <runLineMarkerContributor language="Vclang"
                                  implementationClass="org.vclang.typechecking.execution.TypeCheckRunLineMarkerContributor"/>

        <!-- Color Settings -->

        <colorSettingsPage implementation="org.vclang.editor.VcColorSettingsPage"/>

        <!-- Folding -->

        <lang.foldingBuilder language="Vclang" implementationClass="org.vclang.VcFoldingBuilder"/>

        <!-- Refactoring -->

        <renameInputValidator implementation="org.vclang.refactoring.VcRenameInputValidator"/>

        <!-- Run Configurations -->

        <programRunner implementation="org.vclang.typechecking.execution.TypeCheckRunner"/>
        <configurationType
                implementation="org.vclang.typechecking.execution.configurations.TypeCheckConfigurationType"/>
        <runConfigurationProducer
                implementation="org.vclang.typechecking.execution.TypeCheckRunConfigurationProducer"/>

        <!-- Indices -->

        <stubIndex implementation="org.vclang.psi.stubs.index.VcNamedElementIndex"/>
        <stubIndex implementation="org.vclang.psi.stubs.index.VcDefinitionIndex"/>
        <stubIndex implementation="org.vclang.psi.stubs.index.VcGotoClassIndex"/>

        <!-- Lookup Filters -->

        <lookup.charFilter implementation="org.vclang.codeInsight.VclangCharFilter"/>

        <!-- Services -->

        <projectService serviceInterface="org.vclang.typechecking.TypeCheckingService"
                        serviceImplementation="org.vclang.typechecking.TypeCheckingServiceImpl"/>

    </extensions>

    <actions>

        <action id="VcFormatVclang.PrettyPrinterFormat"
                class="org.vclang.actions.VcPrettyPrinterFormatAction"
                text="Reformat code with PrettyPrinter"
                description="Format current file with PrettyPrinter">
            <add-to-group group-id="CodeFormatGroup" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift X"/>
        </action>

        <action id="Vclang.NewVclangFile"
                class="org.vclang.actions.VcCreateFileAction"
                text="Vclang File"
                description="Create new Vclang file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>

    </actions>

</idea-plugin>
